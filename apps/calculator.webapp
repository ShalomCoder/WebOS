registerAppMetadata({
  name: "Calculator",
  icon: "bi-calculator",
  description: "Simple calculator app.",
  run: function () {
    newCalculatorWindow();
  }
});

function newCalculatorWindow() {
    const win = new UIWindow("Calculator", "Calculator", 320, 520, "#fffa", "#000", "#ddd", "#000");
    const container = win.content;
    const id = win.windowID;

    const html = `
        <div class="flex flex-col h-full w-full text-white font-sans">
            <!-- Display -->
            <div id="calc-display-${id}" class="text-right text-5xl mb-4 p-3 rounded-xl bg-white/70 shadow-[0px_0px_10px_#1112] text-black select-none overflow-hidden">
                0
            </div>

            <!-- Button Grid -->
            <div class="grid grid-cols-4 grid-rows-5 gap-3 flex-grow" id="calc-grid-${id}">
                ${[
                    "C", "+/-", "%", "÷",
                    "7", "8", "9", "×",
                    "4", "5", "6", "-",
                    "1", "2", "3", "+",
                    "0", ".", "=", ""
                ].map(label => {
                    const isOp = ["÷", "×", "-", "+"].includes(label);
                    const isZero = label === "0";
                    const colSpan = isZero ? "col-span-2" : "";
                    const baseClass = `h-full w-full text-2xl font-bold ${colSpan} rounded-full flex items-center justify-center transition-all shadow-[0px_0px_15px_#1113]`;
                    const bg = isOp
                        ? "bg-orange-400/70 text-white hover:bg-orange-500/90 text-3xl"
                        : label === "C"
                        ? "bg-red-500/70 hover:bg-red-500/90"
                        : label === "="
                        ? "bg-green-500/70 hover:bg-green-500/90 text-white"
                        : "bg-white/50 hover:bg-white text-black";
                    return `<button class="${baseClass} ${bg}" data-label="${label}">${label}</button>`;
                }).join("")}
            </div>
        </div>
    `;

    win.setContent(html);

    const display = container.querySelector(`#calc-display-${id}`);
    let current = "0";
    let operator = null;
    let stored = null;

    const updateDisplay = () => {
        display.textContent = current;
    };

    container.querySelectorAll("button[data-label]").forEach(btn => {
        btn.addEventListener("click", () => {
            const label = btn.dataset.label;

            if (label === "C") {
                current = "0";
                stored = null;
                operator = null;
            } else if (label === "+/-") {
                current = (parseFloat(current) * -1).toString();
            } else if (label === "%") {
                current = (parseFloat(current) / 100).toString();
            } else if (["÷", "×", "-", "+"].includes(label)) {
                operator = label;
                stored = current;
                current = "0";
            } else if (label === "=") {
                if (stored !== null && operator) {
                    const a = parseFloat(stored);
                    const b = parseFloat(current);
                    switch (operator) {
                        case "+": current = (a + b).toString(); break;
                        case "-": current = (a - b).toString(); break;
                        case "×": current = (a * b).toString(); break;
                        case "÷": current = b === 0 ? "Error" : (a / b).toString(); break;
                    }
                    stored = null;
                    operator = null;
                }
            } else if (label === ".") {
                if (!current.includes(".")) current += ".";
            } else {
                if (current === "0") current = label;
                else current += label;
            }

            updateDisplay();
        });
    });

    updateDisplay();
}
